// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
    baseUrl: 'http://127.0.0.1:8000' | (string & {});
};

export type GetCsrfCookieData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/sanctum/csrf-cookie';
};

export type GetCsrfCookieResponses = {
    /**
     * Успешное создание
     */
    204: void;
};

export type GetCsrfCookieResponse = GetCsrfCookieResponses[keyof GetCsrfCookieResponses];

export type B3A9Db44Be281C210Db1Dc5686205879Data = {
    body: {
        file: string;
        description: string;
    };
    path?: never;
    query?: never;
    url: '/api/poi/create';
};

export type B3A9Db44Be281C210Db1Dc5686205879Errors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
    /**
     * Ошибка валидации данных
     */
    422: {
        success?: boolean;
        message?: string;
        errors?: {
            description?: Array<string>;
            file?: Array<string>;
        };
    };
};

export type B3A9Db44Be281C210Db1Dc5686205879Error = B3A9Db44Be281C210Db1Dc5686205879Errors[keyof B3A9Db44Be281C210Db1Dc5686205879Errors];

export type B3A9Db44Be281C210Db1Dc5686205879Responses = {
    /**
     * Успешное создание
     */
    201: {
        success?: boolean;
        message?: string;
        data?: {
            description?: string;
            file_name?: string;
            user_id?: number;
            email?: string;
            updated_at?: string;
            created_at?: string;
            id?: number;
        };
    };
};

export type B3A9Db44Be281C210Db1Dc5686205879Response = B3A9Db44Be281C210Db1Dc5686205879Responses[keyof B3A9Db44Be281C210Db1Dc5686205879Responses];

export type E55709238E32Fe7D749B26E30Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/poi/list';
};

export type E55709238E32Fe7D749B26E30Errors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
};

export type E55709238E32Fe7D749B26E30Error = E55709238E32Fe7D749B26E30Errors[keyof E55709238E32Fe7D749B26E30Errors];

export type E55709238E32Fe7D749B26E30Responses = {
    /**
     * Успешный вывод достопримечательностей
     */
    200: {
        success?: boolean;
        message?: string;
        data?: Array<{
            description?: string;
            file_name?: string;
            user_id?: number;
            email?: string;
            updated_at?: string;
            created_at?: string;
            id?: number;
        }>;
    };
};

export type E55709238E32Fe7D749B26E30Response = E55709238E32Fe7D749B26E30Responses[keyof E55709238E32Fe7D749B26E30Responses];

export type B5A8E97C01De37E7F49653dData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/content/udmurtia';
};

export type B5A8E97C01De37E7F49653dErrors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
};

export type B5A8E97C01De37E7F49653dError = B5A8E97C01De37E7F49653dErrors[keyof B5A8E97C01De37E7F49653dErrors];

export type B5A8E97C01De37E7F49653dResponses = {
    /**
     * Успешный вывод контента
     */
    200: {
        success?: boolean;
        message?: string;
        data?: {
            name?: string;
            content?: string;
            updated_at?: string;
            created_at?: string;
            id?: number;
        };
    };
};

export type B5A8E97C01De37E7F49653dResponse = B5A8E97C01De37E7F49653dResponses[keyof B5A8E97C01De37E7F49653dResponses];

export type Ffba1E96F748Cd3857A2B9482Cef3EbData = {
    body: {
        file: string;
    };
    path?: never;
    query?: never;
    url: '/api/trip/image';
};

export type Ffba1E96F748Cd3857A2B9482Cef3EbErrors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
    /**
     * Роли пользователя не достаточно для выполнения операции
     */
    403: {
        success?: boolean;
        message?: string;
        errors?: Array<string>;
    };
    /**
     * Ошибка валидации данных
     */
    422: {
        success?: boolean;
        message?: string;
        errors?: {
            file?: Array<string>;
        };
    };
};

export type Ffba1E96F748Cd3857A2B9482Cef3EbError = Ffba1E96F748Cd3857A2B9482Cef3EbErrors[keyof Ffba1E96F748Cd3857A2B9482Cef3EbErrors];

export type Ffba1E96F748Cd3857A2B9482Cef3EbResponses = {
    /**
     * Успешная загрузка
     */
    200: {
        success?: boolean;
        message?: string;
        data?: {
            file_name?: string;
        };
    };
};

export type Ffba1E96F748Cd3857A2B9482Cef3EbResponse = Ffba1E96F748Cd3857A2B9482Cef3EbResponses[keyof Ffba1E96F748Cd3857A2B9482Cef3EbResponses];

export type D872D3E3A28C31D4C30C076F70E11D7Data = {
    body?: {
        starts_at: string;
        capacity: number;
        min_age: number;
        price: number;
        start_location: string;
        duration: number;
        points?: Array<{
            file_name: string;
            description: string;
            day_of_the_route: number;
            name: string;
        }>;
    };
    path?: never;
    query?: never;
    url: '/api/trip/complex';
};

export type D872D3E3A28C31D4C30C076F70E11D7Errors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
    /**
     * Роли пользователя не достаточно для выполнения операции
     */
    403: {
        success?: boolean;
        message?: string;
        errors?: Array<string>;
    };
    /**
     * Ошибка валидации данных
     */
    422: {
        success?: boolean;
        message?: string;
        errors?: {
            starts_at?: Array<string>;
            capacity?: Array<string>;
            min_age?: Array<string>;
            price?: Array<string>;
            start_location?: Array<string>;
            duration?: Array<string>;
            points?: Array<string>;
            'points.n.file_name'?: Array<string>;
            'points.n.description'?: Array<string>;
            'points.n.day_of_the_route'?: Array<string>;
            'points.n.name'?: Array<string>;
        };
    };
};

export type D872D3E3A28C31D4C30C076F70E11D7Error = D872D3E3A28C31D4C30C076F70E11D7Errors[keyof D872D3E3A28C31D4C30C076F70E11D7Errors];

export type D872D3E3A28C31D4C30C076F70E11D7Responses = {
    /**
     * Успешное создание
     */
    201: {
        success?: boolean;
        message?: string;
        data?: {
            route?: {
                start_location?: string;
                duration?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            trip?: {
                starts_at?: string;
                capacity?: number;
                min_age?: number;
                price?: number;
                route_id?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            points?: Array<{
                file_name: string;
                description: string;
                day_of_the_route: number;
                name: string;
                updated_at?: string;
                created_at?: string;
            }>;
        };
    };
};

export type D872D3E3A28C31D4C30C076F70E11D7Response = D872D3E3A28C31D4C30C076F70E11D7Responses[keyof D872D3E3A28C31D4C30C076F70E11D7Responses];

export type Be28363C04C1Cd7C100107417E944C1Data = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/trip/list';
};

export type Be28363C04C1Cd7C100107417E944C1Errors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
};

export type Be28363C04C1Cd7C100107417E944C1Error = Be28363C04C1Cd7C100107417E944C1Errors[keyof Be28363C04C1Cd7C100107417E944C1Errors];

export type Be28363C04C1Cd7C100107417E944C1Responses = {
    /**
     * Расширенный список эскурсий
     */
    200: {
        success?: boolean;
        message?: string;
        data?: Array<{
            route?: {
                start_location?: string;
                duration?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            trip?: {
                starts_at?: string;
                capacity?: number;
                min_age?: number;
                price?: number;
                route_id?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            points?: Array<{
                file_name: string;
                description: string;
                day_of_the_route: number;
                name: string;
                updated_at?: string;
                created_at?: string;
                pivot?: {
                    route_id?: number;
                    point_id?: number;
                    day_of_the_route?: number;
                };
            }>;
        }>;
    };
};

export type Be28363C04C1Cd7C100107417E944C1Response = Be28363C04C1Cd7C100107417E944C1Responses[keyof Be28363C04C1Cd7C100107417E944C1Responses];

export type Bedf832894D55C9C5A4693541B0B2A5Data = {
    body?: never;
    path?: never;
    query: {
        search: string;
    };
    url: '/api/trip/search';
};

export type Bedf832894D55C9C5A4693541B0B2A5Errors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
    /**
     * Ошибка валидации данных
     */
    422: {
        success?: boolean;
        message?: string;
        errors?: {
            search?: Array<string>;
        };
    };
};

export type Bedf832894D55C9C5A4693541B0B2A5Error = Bedf832894D55C9C5A4693541B0B2A5Errors[keyof Bedf832894D55C9C5A4693541B0B2A5Errors];

export type Bedf832894D55C9C5A4693541B0B2A5Responses = {
    /**
     * Результаты поиска
     */
    200: {
        success?: boolean;
        message?: string;
        data?: Array<{
            route?: {
                start_location?: string;
                duration?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            trip?: {
                starts_at?: string;
                capacity?: number;
                min_age?: number;
                price?: number;
                route_id?: number;
                updated_at?: string;
                created_at?: string;
                id?: number;
            };
            points?: Array<{
                file_name: string;
                description: string;
                day_of_the_route: number;
                name: string;
                updated_at?: string;
                created_at?: string;
                pivot?: {
                    route_id?: number;
                    point_id?: number;
                    day_of_the_route?: number;
                };
            }>;
        }>;
    };
};

export type Bedf832894D55C9C5A4693541B0B2A5Response = Bedf832894D55C9C5A4693541B0B2A5Responses[keyof Bedf832894D55C9C5A4693541B0B2A5Responses];

export type SignupData = {
    body?: {
        first_name: string;
        last_name: string;
        patronymic?: string;
        birthday: string;
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/api/user/signup';
};

export type SignupErrors = {
    /**
     * Ошибка валидации данных
     */
    422: {
        success?: boolean;
        message?: string;
        errors?: {
            first_name?: Array<string>;
            last_name?: Array<string>;
            email?: Array<string>;
            password?: Array<string>;
            birthday?: Array<string>;
        };
    };
};

export type SignupError = SignupErrors[keyof SignupErrors];

export type SignupResponses = {
    /**
     * Успешная регистрация
     */
    200: {
        success?: boolean;
        message?: string;
        data?: {
            first_name?: string;
            last_name?: string;
            patronymic?: string;
            email?: string;
            birthday?: string;
            updated_at?: string;
            created_at?: string;
            id?: number;
        };
    };
};

export type SignupResponse = SignupResponses[keyof SignupResponses];

export type SigninData = {
    body?: {
        email: string;
        password: string;
    };
    path?: never;
    query?: never;
    url: '/api/user/signin';
};

export type SigninErrors = {
    /**
     * Неверные credentials
     */
    401: {
        success?: boolean;
        message?: string;
        errors?: Array<string>;
    };
};

export type SigninError = SigninErrors[keyof SigninErrors];

export type SigninResponses = {
    /**
     * Успешный вход
     */
    200: {
        success?: boolean;
        message?: string;
        data?: Array<string>;
    };
};

export type SigninResponse = SigninResponses[keyof SigninResponses];

export type GetUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/user/me';
};

export type GetUserErrors = {
    /**
     * Пользователь не авторизирован
     */
    401: {
        message?: string;
    };
};

export type GetUserError = GetUserErrors[keyof GetUserErrors];

export type GetUserResponses = {
    /**
     * Успешный вывод пользователя
     */
    200: {
        success?: boolean;
        message?: string;
        data?: {
            first_name: string;
            last_name: string;
            patronymic?: string;
            birthday: string;
            email: string;
            role: string;
        };
    };
};

export type GetUserResponse = GetUserResponses[keyof GetUserResponses];
