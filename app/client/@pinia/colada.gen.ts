// This file is auto-generated by @hey-api/openapi-ts

import { type _JSONValue, defineQueryOptions, type UseMutationOptions } from '@pinia/colada';

import { serializeQueryKeyValue } from '../client';
import { client } from '../client.gen';
import { b3A9Db44Be281C210Db1Dc5686205879, b5A8E97C01De37E7F49653D, be28363C04C1Cd7C100107417E944C1, bedf832894D55C9C5A4693541B0B2A5, c3893Ea1Ca41948Fc2Ab2Ef3A0209, d872D3E3A28C31D4C30C076F70E11D7, e55709238E32Fe7D749B26E30, ffba1E96F748Cd3857A2B9482Cef3Eb, type Options, signup } from '../sdk.gen';
import type { B3A9Db44Be281C210Db1Dc5686205879Data, B3A9Db44Be281C210Db1Dc5686205879Error, B3A9Db44Be281C210Db1Dc5686205879Response, B5A8E97C01De37E7F49653dData, Be28363C04C1Cd7C100107417E944C1Data, Bedf832894D55C9C5A4693541B0B2A5Data, C3893Ea1Ca41948Fc2Ab2Ef3A0209Data, C3893Ea1Ca41948Fc2Ab2Ef3A0209Error, C3893Ea1Ca41948Fc2Ab2Ef3A0209Response, D872D3E3A28C31D4C30C076F70E11D7Data, D872D3E3A28C31D4C30C076F70E11D7Error, D872D3E3A28C31D4C30C076F70E11D7Response, E55709238E32Fe7D749B26E30Data, Ffba1E96F748Cd3857A2B9482Cef3EbData, Ffba1E96F748Cd3857A2B9482Cef3EbError, Ffba1E96F748Cd3857A2B9482Cef3EbResponse, SignupData, SignupError, SignupResponse } from '../types.gen';

/**
 * Создать новую достопримечательность
 *
 * Создаёт и возвращает новую достопримечательность в случае успеха
 */
export const b3A9Db44Be281C210Db1Dc5686205879Mutation = (options?: Partial<Options<B3A9Db44Be281C210Db1Dc5686205879Data>>): UseMutationOptions<B3A9Db44Be281C210Db1Dc5686205879Response, Options<B3A9Db44Be281C210Db1Dc5686205879Data>, B3A9Db44Be281C210Db1Dc5686205879Error> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await b3A9Db44Be281C210Db1Dc5686205879({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

export type QueryKey<TOptions extends Options> = [
    Pick<TOptions, 'path'> & {
        _id: string;
        baseUrl?: _JSONValue;
        body?: _JSONValue;
        query?: _JSONValue;
        tags?: _JSONValue;
    }
];

const createQueryKey = <TOptions extends Options>(id: string, options?: TOptions, tags?: ReadonlyArray<string>): [
    QueryKey<TOptions>[0]
] => {
    const params: QueryKey<TOptions>[0] = { _id: id, baseUrl: options?.baseUrl || (options?.client ?? client).getConfig().baseUrl } as QueryKey<TOptions>[0];
    if (tags) {
        params.tags = tags as unknown as _JSONValue;
    }
    if (options?.body !== undefined) {
        const normalizedBody = serializeQueryKeyValue(options.body);
        if (normalizedBody !== undefined) {
            params.body = normalizedBody;
        }
    }
    if (options?.path) {
        params.path = options.path;
    }
    if (options?.query !== undefined) {
        const normalizedQuery = serializeQueryKeyValue(options.query);
        if (normalizedQuery !== undefined) {
            params.query = normalizedQuery;
        }
    }
    return [
        params
    ];
};

export const e55709238E32Fe7D749B26E30QueryKey = (options?: Options<E55709238E32Fe7D749B26E30Data>) => createQueryKey('e55709238E32Fe7D749B26E30', options);

/**
 * Получить список достопримечательностей
 *
 * Возвращает список всех достопримечательностей
 */
export const e55709238E32Fe7D749B26E30Query = defineQueryOptions((options?: Options<E55709238E32Fe7D749B26E30Data>) => ({
    key: e55709238E32Fe7D749B26E30QueryKey(options),
    query: async (context) => {
        const { data } = await e55709238E32Fe7D749B26E30({
            ...options,
            ...context,
            throwOnError: true
        });
        return data;
    }
}));

export const b5A8E97C01De37E7F49653dQueryKey = (options?: Options<B5A8E97C01De37E7F49653dData>) => createQueryKey('b5A8E97C01De37E7F49653D', options);

/**
 * Контент по Удмуртии
 *
 * Возвращает статический контент в формате markdown для страницы
 */
export const b5A8E97C01De37E7F49653dQuery = defineQueryOptions((options?: Options<B5A8E97C01De37E7F49653dData>) => ({
    key: b5A8E97C01De37E7F49653dQueryKey(options),
    query: async (context) => {
        const { data } = await b5A8E97C01De37E7F49653D({
            ...options,
            ...context,
            throwOnError: true
        });
        return data;
    }
}));

/**
 * Загрузить картинку для точки
 *
 * Загружает картинку для точки и возвращает её путь в случае успеха
 */
export const ffba1E96F748Cd3857A2B9482Cef3EbMutation = (options?: Partial<Options<Ffba1E96F748Cd3857A2B9482Cef3EbData>>): UseMutationOptions<Ffba1E96F748Cd3857A2B9482Cef3EbResponse, Options<Ffba1E96F748Cd3857A2B9482Cef3EbData>, Ffba1E96F748Cd3857A2B9482Cef3EbError> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await ffba1E96F748Cd3857A2B9482Cef3Eb({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

/**
 * Создать экскурсию, маршрут и точки
 *
 * Создаёт и возвращает новую экскурсию, маршрут и привязанные к нему точки. Всё в одном запросе
 */
export const d872D3E3A28C31D4C30C076F70E11D7Mutation = (options?: Partial<Options<D872D3E3A28C31D4C30C076F70E11D7Data>>): UseMutationOptions<D872D3E3A28C31D4C30C076F70E11D7Response, Options<D872D3E3A28C31D4C30C076F70E11D7Data>, D872D3E3A28C31D4C30C076F70E11D7Error> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await d872D3E3A28C31D4C30C076F70E11D7({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

export const be28363C04C1Cd7C100107417E944C1QueryKey = (options?: Options<Be28363C04C1Cd7C100107417E944C1Data>) => createQueryKey('be28363C04C1Cd7C100107417E944C1', options);

/**
 * Получить все экскурсии
 *
 * Запрос для получения списка всех экскурсий вместе с точками и маршрутами (пагинация лень пока)
 */
export const be28363C04C1Cd7C100107417E944C1Query = defineQueryOptions((options?: Options<Be28363C04C1Cd7C100107417E944C1Data>) => ({
    key: be28363C04C1Cd7C100107417E944C1QueryKey(options),
    query: async (context) => {
        const { data } = await be28363C04C1Cd7C100107417E944C1({
            ...options,
            ...context,
            throwOnError: true
        });
        return data;
    }
}));

export const bedf832894D55C9C5A4693541B0B2A5QueryKey = (options: Options<Bedf832894D55C9C5A4693541B0B2A5Data>) => createQueryKey('bedf832894D55C9C5A4693541B0B2A5', options);

/**
 * Поиск по экскурсиям, точкам и маршрутам
 *
 * Запрос для поиска по всем маршрутам, точкам и экскурсиям. Ищет в полях description, name и start_location
 */
export const bedf832894D55C9C5A4693541B0B2A5Query = defineQueryOptions((options: Options<Bedf832894D55C9C5A4693541B0B2A5Data>) => ({
    key: bedf832894D55C9C5A4693541B0B2A5QueryKey(options),
    query: async (context) => {
        const { data } = await bedf832894D55C9C5A4693541B0B2A5({
            ...options,
            ...context,
            throwOnError: true
        });
        return data;
    }
}));

/**
 * Зарегистрировать нового пользователя
 *
 * Создаёт и возвращает нового пользователя в случае успеха
 */
export const signupMutation = (options?: Partial<Options<SignupData>>): UseMutationOptions<SignupResponse, Options<SignupData>, SignupError> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await signup({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};

/**
 * Войти в аккаунт
 *
 * Проверяет credentials и создаёт новый токен в случае успеха
 */
export const c3893Ea1Ca41948Fc2Ab2Ef3A0209Mutation = (options?: Partial<Options<C3893Ea1Ca41948Fc2Ab2Ef3A0209Data>>): UseMutationOptions<C3893Ea1Ca41948Fc2Ab2Ef3A0209Response, Options<C3893Ea1Ca41948Fc2Ab2Ef3A0209Data>, C3893Ea1Ca41948Fc2Ab2Ef3A0209Error> => {
    return {
        mutation: async (fnOptions) => {
            const { data } = await c3893Ea1Ca41948Fc2Ab2Ef3A0209({
                ...options,
                ...fnOptions,
                throwOnError: true
            });
            return data;
        }
    };
};
